apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: dev
  namespace: rollouts-app
  annotations:
    kargo.akuity.io/color: red
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: rollouts-app
    sources:
      direct: true
  promotionTemplate:
    spec:
      vars:
      - name: gitRepo
        value: https://github.com/eddiewebb/argodemo-rollouts-app
      - name: imageRepo
        value: ghcr.io/eddiewebb/rollouts
      steps:
      - uses: git-clone
        config:
          repoURL: ${{ vars.gitRepo }}
          checkout:
          # Skip checkout on main since we are pulling from warehouse origin already (I think?)
          - branch: main
            path: ./src
          - branch: env/dev
            create: true
            path: ./out
      - uses: git-clear
        config:
          path: ./out
      - uses: kustomize-set-image
        as: update-image
        config:
          path: ./src/deploy/env/dev
          images:
          - image: ${{ vars.imageRepo }}
            tag: ${{ imageFrom(vars.imageRepo).Tag }}
      - uses: kustomize-build
        config:
          path: ./src/deploy/env/dev
          outPath: ./out/manifests.yaml
      - uses: copy
        config:
          inPath: ./src/.circleci
          outPath: ./out/.circleci
      - uses: git-commit
        as: commit
        config:
          path: ./out
          message: ${{ outputs['update-image'].commitMessage }}
      - uses: git-push
        config:
          path: ./out
          targetBranch: env/dev
      # - uses: argocd-update
      #   config:
      #     apps:
      #     - name: rollouts-app-dev
      #       sources:
      #       - repoURL: ${{ vars.gitRepo }}
      #         desiredRevision: ${{ outputs.commit.commit }}
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: staging
  namespace: rollouts-app
  annotations:
    kargo.akuity.io/color: amber
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: rollouts-app
    sources:
      stages:
      - dev
  promotionTemplate:
    spec:
      vars:
      - name: gitRepo
        value: https://github.com/eddiewebb/argodemo-rollouts-app
      - name: imageRepo
        value: ghcr.io/eddiewebb/rollouts
      steps:
      - uses: git-clone
        config:
          repoURL: ${{ vars.gitRepo }}
          checkout:
          - branch: main
            path: ./src
          - branch: env/staging
            create: true
            path: ./out
      - uses: git-clear
        config:
          path: ./out
      - uses: kustomize-set-image
        as: update-image
        config:
          path: ./src/deploy/env/staging
          images:
          - image: ${{ vars.imageRepo }}
            tag: ${{ imageFrom(vars.imageRepo).Tag }}
      - uses: kustomize-build
        config:
          path: ./src/deploy/env/staging
          outPath: ./out/manifests.yaml
      - uses: git-commit
        as: commit
        config:
          path: ./out
          message: ${{ outputs['update-image'].commitMessage }}
      - uses: git-push
        config:
          path: ./out
          targetBranch: env/staging
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: prod
  namespace: rollouts-app
  annotations:
    kargo.akuity.io/color: violet
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: rollouts-app
    sources:
      stages:
      - staging
  promotionTemplate:
    spec:
      vars:
      - name: gitRepo
        value: https://github.com/eddiewebb/argodemo-rollouts-app
      - name: imageRepo
        value: ghcr.io/eddiewebb/rollouts
      steps:
      - uses: git-clone
        config:
          repoURL: ${{ vars.gitRepo }}
          checkout:
          - branch: main
            path: ./src
          - branch: env/prod
            create: true
            path: ./out
      - uses: git-clear
        config:
          path: ./out
      - uses: kustomize-set-image
        as: update-image
        config:
          path: ./src/deploy/env/prod
          images:
          - image: ${{ vars.imageRepo }}
            tag: ${{ imageFrom(vars.imageRepo).Tag }}
      - uses: kustomize-build
        config:
          path: ./src/deploy/env/prod
          outPath: ./out/manifests.yaml
      - uses: git-commit
        as: commit
        config:
          path: ./out
          message: ${{ outputs['update-image'].commitMessage }}
      - uses: git-push
        as: push
        config:
          path: ./out
          generateTargetBranch: true
      - uses: git-open-pr
        as: open-pr
        config:
          repoURL: ${{ vars.gitRepo }}
          createTargetBranch: true
          sourceBranch: ${{ outputs.push.branch }}
          targetBranch: env/${{ ctx.stage }}