apiVersion: kargo.akuity.io/v1alpha1
kind: Project
metadata:
  name: oom-demo
---
apiVersion: kargo.akuity.io/v1alpha1
kind: ProjectConfig
metadata:
  name: oom-demo
  namespace: oom-demo
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Warehouse
metadata:
  name: oom-demo
  namespace: oom-demo
spec:
  subscriptions:
  - image:
      repoURL: ghcr.io/eddiewebb/oom
      discoveryLimit: 5
      imageSelectionStrategy: Lexical
  - git:
      repoURL: https://github.com/akuity/sedemo-app-monorepo
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: dev
  namespace: oom-demo
  annotations:
    kargo.akuity.io/color: red
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: oom-demo
    sources:
      direct: true
  promotionTemplate:
    spec:
      vars:
      - name: gitRepo
        value: https://github.com/akuity/sedemo-app-monorepo #how to get this from warehouse?
      - name: imageRepo
        value: ghcr.io/eddiewebb/oom
      - name: targetBranch
        value: env/dev 
      - name: path_src
        value: ./src
      - name: path_out
        value: ./out
      steps:
      - uses: git-clone
        config:
          repoURL: ${{ vars.gitRepo }}
          checkout:
          - branch: main
            path: ${{ vars.path_src }}
          - branch: ${{ vars.targetBranch }}
            create: true
            path: ${{ vars.path_out }}
      - uses: git-clear
        config:
          path: ${{ vars.path_out }}
      - uses: yaml-update
        config:
          path: ./src/oom/manifest/deployment.yaml
          updates:
            - key: spec.template.spec.containers.0.image
              value: ${{ imageFrom("ghcr.io/eddiewebb/oom") }}
      - uses: copy
        config:
          inPath: ./src/oom/manifest/deployment.yaml
          outPath: ./out/oom/manifest/deployment.yaml
      - uses: git-commit
        as: commit
        config:
          path: ${{ vars.path_out }}
          message: "Promote ${{ imageFrom(vars.imageRepo).Tag }} to ${{ ctx.stage }} [skip ci]"
      - uses: git-push
        config:
          path: ${{ vars.path_out }}
          targetBranch: ${{ vars.targetBranch }}
      - uses: argocd-update
        continueOnError: true
        config:
          apps:
          - name: oom-demo-dev
            namespace: argocd
---
